// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-left-hover-name: 'arrow-left-hover';
$arrow-left-hover-x: 58px;
$arrow-left-hover-y: 0px;
$arrow-left-hover-offset-x: -58px;
$arrow-left-hover-offset-y: 0px;
$arrow-left-hover-width: 9px;
$arrow-left-hover-height: 18px;
$arrow-left-hover-total-width: 67px;
$arrow-left-hover-total-height: 62px;
$arrow-left-hover-image: '../image/sprite.png';
$arrow-left-hover: (58px, 0px, -58px, 0px, 9px, 18px, 67px, 62px, '../image/sprite.png', 'arrow-left-hover', );
$arrow-left-name: 'arrow-left';
$arrow-left-x: 0px;
$arrow-left-y: 44px;
$arrow-left-offset-x: 0px;
$arrow-left-offset-y: -44px;
$arrow-left-width: 9px;
$arrow-left-height: 18px;
$arrow-left-total-width: 67px;
$arrow-left-total-height: 62px;
$arrow-left-image: '../image/sprite.png';
$arrow-left: (0px, 44px, 0px, -44px, 9px, 18px, 67px, 62px, '../image/sprite.png', 'arrow-left', );
$arrow-right-hover-name: 'arrow-right-hover';
$arrow-right-hover-x: 14px;
$arrow-right-hover-y: 44px;
$arrow-right-hover-offset-x: -14px;
$arrow-right-hover-offset-y: -44px;
$arrow-right-hover-width: 9px;
$arrow-right-hover-height: 18px;
$arrow-right-hover-total-width: 67px;
$arrow-right-hover-total-height: 62px;
$arrow-right-hover-image: '../image/sprite.png';
$arrow-right-hover: (14px, 44px, -14px, -44px, 9px, 18px, 67px, 62px, '../image/sprite.png', 'arrow-right-hover', );
$arrow-right-name: 'arrow-right';
$arrow-right-x: 28px;
$arrow-right-y: 44px;
$arrow-right-offset-x: -28px;
$arrow-right-offset-y: -44px;
$arrow-right-width: 9px;
$arrow-right-height: 18px;
$arrow-right-total-width: 67px;
$arrow-right-total-height: 62px;
$arrow-right-image: '../image/sprite.png';
$arrow-right: (28px, 44px, -28px, -44px, 9px, 18px, 67px, 62px, '../image/sprite.png', 'arrow-right', );
$icon-basket-name: 'icon-basket';
$icon-basket-x: 0px;
$icon-basket-y: 0px;
$icon-basket-offset-x: 0px;
$icon-basket-offset-y: 0px;
$icon-basket-width: 53px;
$icon-basket-height: 39px;
$icon-basket-total-width: 67px;
$icon-basket-total-height: 62px;
$icon-basket-image: '../image/sprite.png';
$icon-basket: (0px, 0px, 0px, 0px, 53px, 39px, 67px, 62px, '../image/sprite.png', 'icon-basket', );
$icon-personal-room-name: 'icon-personalRoom';
$icon-personal-room-x: 58px;
$icon-personal-room-y: 23px;
$icon-personal-room-offset-x: -58px;
$icon-personal-room-offset-y: -23px;
$icon-personal-room-width: 8px;
$icon-personal-room-height: 10px;
$icon-personal-room-total-width: 67px;
$icon-personal-room-total-height: 62px;
$icon-personal-room-image: '../image/sprite.png';
$icon-personal-room: (58px, 23px, -58px, -23px, 8px, 10px, 67px, 62px, '../image/sprite.png', 'icon-personalRoom', );
$icon-search-name: 'icon-search';
$icon-search-x: 42px;
$icon-search-y: 44px;
$icon-search-offset-x: -42px;
$icon-search-offset-y: -44px;
$icon-search-width: 10px;
$icon-search-height: 10px;
$icon-search-total-width: 67px;
$icon-search-total-height: 62px;
$icon-search-image: '../image/sprite.png';
$icon-search: (42px, 44px, -42px, -44px, 10px, 10px, 67px, 62px, '../image/sprite.png', 'icon-search', );
$spritesheet-width: 67px;
$spritesheet-height: 62px;
$spritesheet-image: '../image/sprite.png';
$spritesheet-sprites: ($arrow-left-hover, $arrow-left, $arrow-right-hover, $arrow-right, $icon-basket, $icon-personal-room, $icon-search, );
$spritesheet: (67px, 62px, '../image/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
